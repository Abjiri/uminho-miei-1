Grammar

    0 $accept: Program $end

    1 Program: DECLARATION_SECTION Decs CODE_SECTION Insts TERMINATE_PROGRAM

    2 Decs: Dec
    3     | Decs ';' Dec

    4 Dec: VAR ':' Type

    5 Type: INTEGER

    6 Insts: Inst
    7      | Insts ';' Inst

    8 Inst: Atrib
    9     | Write
   10     | Read

   11 Atrib: VAR '=' Exp

   12 Write: PRINT_FUNCTION '(' Exp ')'

   13 Read: READ_FUNCTION '(' VAR ')'

   14 Exp: Termo
   15    | Exp '+' Termo
   16    | Exp '-' Termo

   17 Termo: Fator
   18      | Termo '*' Fator
   19      | Termo '/' Fator

   20 Fator: NUM
   21      | VAR
   22      | '(' Exp ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 12 13 22
')' (41) 12 13 22
'*' (42) 18
'+' (43) 15
'-' (45) 16
'/' (47) 19
':' (58) 4
';' (59) 3 7
'=' (61) 11
error (256)
DECLARATION_SECTION (258) 1
CODE_SECTION (259) 1
TERMINATE_PROGRAM (260) 1
INTEGER (261) 5
PRINT_FUNCTION (262) 12
READ_FUNCTION (263) 13
NUM (264) 20
VAR (265) 4 11 13 21


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
Program (21)
    on left: 1, on right: 0
Decs (22)
    on left: 2 3, on right: 1 3
Dec (23)
    on left: 4, on right: 2 3
Type (24)
    on left: 5, on right: 4
Insts (25)
    on left: 6 7, on right: 1 7
Inst (26)
    on left: 8 9 10, on right: 6 7
Atrib (27)
    on left: 11, on right: 8
Write (28)
    on left: 12, on right: 9
Read (29)
    on left: 13, on right: 10
Exp (30)
    on left: 14 15 16, on right: 11 12 15 16 22
Termo (31)
    on left: 17 18 19, on right: 14 15 16 18 19
Fator (32)
    on left: 20 21 22, on right: 17 18 19


state 0

    0 $accept: . Program $end

    DECLARATION_SECTION  shift, and go to state 1

    Program  go to state 2


state 1

    1 Program: DECLARATION_SECTION . Decs CODE_SECTION Insts TERMINATE_PROGRAM

    VAR  shift, and go to state 3

    Decs  go to state 4
    Dec   go to state 5


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


state 3

    4 Dec: VAR . ':' Type

    ':'  shift, and go to state 7


state 4

    1 Program: DECLARATION_SECTION Decs . CODE_SECTION Insts TERMINATE_PROGRAM
    3 Decs: Decs . ';' Dec

    CODE_SECTION  shift, and go to state 8
    ';'           shift, and go to state 9


state 5

    2 Decs: Dec .

    $default  reduce using rule 2 (Decs)


state 6

    0 $accept: Program $end .

    $default  accept


state 7

    4 Dec: VAR ':' . Type

    INTEGER  shift, and go to state 10

    Type  go to state 11


state 8

    1 Program: DECLARATION_SECTION Decs CODE_SECTION . Insts TERMINATE_PROGRAM

    PRINT_FUNCTION  shift, and go to state 12
    READ_FUNCTION   shift, and go to state 13
    VAR             shift, and go to state 14

    Insts  go to state 15
    Inst   go to state 16
    Atrib  go to state 17
    Write  go to state 18
    Read   go to state 19


state 9

    3 Decs: Decs ';' . Dec

    VAR  shift, and go to state 3

    Dec  go to state 20


state 10

    5 Type: INTEGER .

    $default  reduce using rule 5 (Type)


state 11

    4 Dec: VAR ':' Type .

    $default  reduce using rule 4 (Dec)


state 12

   12 Write: PRINT_FUNCTION . '(' Exp ')'

    '('  shift, and go to state 21


state 13

   13 Read: READ_FUNCTION . '(' VAR ')'

    '('  shift, and go to state 22


state 14

   11 Atrib: VAR . '=' Exp

    '='  shift, and go to state 23


state 15

    1 Program: DECLARATION_SECTION Decs CODE_SECTION Insts . TERMINATE_PROGRAM
    7 Insts: Insts . ';' Inst

    TERMINATE_PROGRAM  shift, and go to state 24
    ';'                shift, and go to state 25


state 16

    6 Insts: Inst .

    $default  reduce using rule 6 (Insts)


state 17

    8 Inst: Atrib .

    $default  reduce using rule 8 (Inst)


state 18

    9 Inst: Write .

    $default  reduce using rule 9 (Inst)


state 19

   10 Inst: Read .

    $default  reduce using rule 10 (Inst)


state 20

    3 Decs: Decs ';' Dec .

    $default  reduce using rule 3 (Decs)


state 21

   12 Write: PRINT_FUNCTION '(' . Exp ')'

    NUM  shift, and go to state 26
    VAR  shift, and go to state 27
    '('  shift, and go to state 28

    Exp    go to state 29
    Termo  go to state 30
    Fator  go to state 31


state 22

   13 Read: READ_FUNCTION '(' . VAR ')'

    VAR  shift, and go to state 32


state 23

   11 Atrib: VAR '=' . Exp

    NUM  shift, and go to state 26
    VAR  shift, and go to state 27
    '('  shift, and go to state 28

    Exp    go to state 33
    Termo  go to state 30
    Fator  go to state 31


state 24

    1 Program: DECLARATION_SECTION Decs CODE_SECTION Insts TERMINATE_PROGRAM .

    $default  reduce using rule 1 (Program)


state 25

    7 Insts: Insts ';' . Inst

    PRINT_FUNCTION  shift, and go to state 12
    READ_FUNCTION   shift, and go to state 13
    VAR             shift, and go to state 14

    Inst   go to state 34
    Atrib  go to state 17
    Write  go to state 18
    Read   go to state 19


state 26

   20 Fator: NUM .

    $default  reduce using rule 20 (Fator)


state 27

   21 Fator: VAR .

    $default  reduce using rule 21 (Fator)


state 28

   22 Fator: '(' . Exp ')'

    NUM  shift, and go to state 26
    VAR  shift, and go to state 27
    '('  shift, and go to state 28

    Exp    go to state 35
    Termo  go to state 30
    Fator  go to state 31


state 29

   12 Write: PRINT_FUNCTION '(' Exp . ')'
   15 Exp: Exp . '+' Termo
   16    | Exp . '-' Termo

    ')'  shift, and go to state 36
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38


state 30

   14 Exp: Termo .
   18 Termo: Termo . '*' Fator
   19      | Termo . '/' Fator

    '*'  shift, and go to state 39
    '/'  shift, and go to state 40

    $default  reduce using rule 14 (Exp)


state 31

   17 Termo: Fator .

    $default  reduce using rule 17 (Termo)


state 32

   13 Read: READ_FUNCTION '(' VAR . ')'

    ')'  shift, and go to state 41


state 33

   11 Atrib: VAR '=' Exp .
   15 Exp: Exp . '+' Termo
   16    | Exp . '-' Termo

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38

    $default  reduce using rule 11 (Atrib)


state 34

    7 Insts: Insts ';' Inst .

    $default  reduce using rule 7 (Insts)


state 35

   15 Exp: Exp . '+' Termo
   16    | Exp . '-' Termo
   22 Fator: '(' Exp . ')'

    ')'  shift, and go to state 42
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38


state 36

   12 Write: PRINT_FUNCTION '(' Exp ')' .

    $default  reduce using rule 12 (Write)


state 37

   15 Exp: Exp '+' . Termo

    NUM  shift, and go to state 26
    VAR  shift, and go to state 27
    '('  shift, and go to state 28

    Termo  go to state 43
    Fator  go to state 31


state 38

   16 Exp: Exp '-' . Termo

    NUM  shift, and go to state 26
    VAR  shift, and go to state 27
    '('  shift, and go to state 28

    Termo  go to state 44
    Fator  go to state 31


state 39

   18 Termo: Termo '*' . Fator

    NUM  shift, and go to state 26
    VAR  shift, and go to state 27
    '('  shift, and go to state 28

    Fator  go to state 45


state 40

   19 Termo: Termo '/' . Fator

    NUM  shift, and go to state 26
    VAR  shift, and go to state 27
    '('  shift, and go to state 28

    Fator  go to state 46


state 41

   13 Read: READ_FUNCTION '(' VAR ')' .

    $default  reduce using rule 13 (Read)


state 42

   22 Fator: '(' Exp ')' .

    $default  reduce using rule 22 (Fator)


state 43

   15 Exp: Exp '+' Termo .
   18 Termo: Termo . '*' Fator
   19      | Termo . '/' Fator

    '*'  shift, and go to state 39
    '/'  shift, and go to state 40

    $default  reduce using rule 15 (Exp)


state 44

   16 Exp: Exp '-' Termo .
   18 Termo: Termo . '*' Fator
   19      | Termo . '/' Fator

    '*'  shift, and go to state 39
    '/'  shift, and go to state 40

    $default  reduce using rule 16 (Exp)


state 45

   18 Termo: Termo '*' Fator .

    $default  reduce using rule 18 (Termo)


state 46

   19 Termo: Termo '/' Fator .

    $default  reduce using rule 19 (Termo)
